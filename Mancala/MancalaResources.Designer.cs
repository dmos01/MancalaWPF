//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mancala {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MancalaResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MancalaResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mancala.MancalaResources", typeof(MancalaResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alternating.
        /// </summary>
        internal static string Alternating {
            get {
                return ResourceManager.GetString("Alternating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created by Daniel Spencer..
        /// </summary>
        internal static string CreatedBy {
            get {
                return ResourceManager.GetString("CreatedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ..
        /// </summary>
        internal static string EndOfSentence {
            get {
                return ResourceManager.GetString("EndOfSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mancala.
        /// </summary>
        internal static string MancalaLiteral {
            get {
                return ResourceManager.GetString("MancalaLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Computer.
        /// </summary>
        internal static string Player2ComputerDefaultName {
            get {
                return ResourceManager.GetString("Player2ComputerDefaultName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player 2.
        /// </summary>
        internal static string Player2HumanDefaultName {
            get {
                return ResourceManager.GetString("Player2HumanDefaultName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random.
        /// </summary>
        internal static string Random {
            get {
                return ResourceManager.GetString("Random", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , released 12 November 2021..
        /// </summary>
        internal static string ReleaseDate {
            get {
                return ResourceManager.GetString("ReleaseDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mancala is played on a board with two rows of 6 cups and a larger cup, called a Mancala, on each side. Player 1 owns the bottom row and left Mancala; player 2 owns the top row and right Mancala. The aim of the game is to have the most stones in your Mancala when either player has no more stones in any of their cups.
        ///
        ///On your turn, click one of your cups. The stones in that cup will be &apos;sowed&apos; ⁠— the first stone will be placed into the cup (or Mancala) on its left, and so on. Sowing will continue clockwise [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Rules {
            get {
                return ResourceManager.GetString("Rules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        internal static string VersionLiteral {
            get {
                return ResourceManager.GetString("VersionLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alternating (.
        /// </summary>
        internal static string WhoStartsComboboxAlternatingPrefix {
            get {
                return ResourceManager.GetString("WhoStartsComboboxAlternatingPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  next).
        /// </summary>
        internal static string WhoStartsComboboxAlternatingSuffix {
            get {
                return ResourceManager.GetString("WhoStartsComboboxAlternatingSuffix", resourceCulture);
            }
        }
    }
}
